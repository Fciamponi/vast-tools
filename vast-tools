#!/usr/bin/env perl

# VAST-TOOLS Wrapper
# Authors: Tim Sterne-Weiler & Kevin Ha, 2014
# tim.sterne.weiler@utoronto.ca
# k.ha@mail.utoronto.ca

# Updated and modified
# Manuel Irimia, from 2015
# mirimia@gmail.com, manuel.irimia@crg.eu


use strict;
use warnings;

use FindBin;
use lib "$FindBin::RealBin/lib";
use FuncBasics qw(:all);

use Getopt::Long;
use Cwd qw(abs_path);

use constant DEFAULT_OUTDIR => 'vast_out';

our $EXIT_STATUS = 0;

# INITIALIZE
my $path = abs_path($0);
$0 =~ s/^.*\///;
$path =~ s/\/$0$//;

# COMMAND FLAG DEFAULTS
my $input;

my $cores = 1; # by Default

my $legacyFlag = 0; # Use old input and output... Not by default.
my $helpFlag = 0;
my $cleanFlag = 0;
my $checkVers = 0;

my $outdir;

my $subCommand = shift @ARGV or $helpFlag = 1;

my @args = @ARGV;

Getopt::Long::Configure("pass_through", "no_auto_abbrev");
GetOptions(		  "help" => \$helpFlag,
			  "h" => \$helpFlag,
			  "legacy" => \$legacyFlag,
			  "output=s" => \$outdir,
			  "o=s" => \$outdir,
			  "version" => \$checkVers);

if($checkVers) {
  # Check current version of git repository:
  system("bash", "-c", "[ `cd $path; git log --pretty=%H ...refs/heads/master^ | head -n 1` != `git ls-remote git\@github.com:vastgroup/vast-tools.git -h refs/heads/master | cut -f 1` ] && (echo; echo UPDATE!: It looks like you are not up to date with the current git repository!; echo There may be a newer version available... try: 'git pull'; echo)>&2");
  $helpFlag = 1;
}

if($helpFlag and 
	!defined($subCommand) or
   	(($subCommand eq "align" or
	  $subCommand eq "combine" or
	  $subCommand eq "merge" or
	  $subCommand eq "compare" or
	  $subCommand eq "tidy" or
	  $subCommand eq "diff" or
      	  $subCommand eq "plot") ? 0 : 1)) {
  die "
Usage: $0 sub-commands [options]

[sub-commands]
	align		:	Align RNA-Seq reads to exon-exon junctions and quantify AS
        merge           :       Merge vast-tool outputs from multiple sub-samples  
	combine		:	Combine two or more 'aligned' RNA-Seq samples into summary tables
        compare         :       Compare PSIs between samples and produces lists for GO analysis
	diff		:	Compare posterior distributions over PSI of two or more samples 
	plot		:	Utility application to plot PSI scatterplots
        tidy            :       Simplifies and filters the PSI table for external analysis (e.g. in R)

[global options]
	-h,--help	:	Print this message
	-o,--output	:	Output directory (default vast_out; 
                                    except for plot, which uses input file location)
	--legacy	:	Use old input/output styles
	--verbose	:	Print stderr


*** Questions \& Bug Reports: 
    - align, merge, combine, compare, tidy: Manuel Irimia (mirimia\@gmail.com)
    - diff: Tim Sterne-Weiler (tim.sterne.weiler\@utoronto.ca)
    - plot: Kevin Ha (k.ha\@mail.utoronto.ca), Javier Tapial (javier.tapial\@crg.eu)

"
}

# Check if output directory option was specified --KH
# If not, set the default and add to @args
if (! defined $outdir) {
    $outdir = DEFAULT_OUTDIR;
    $outdir = abs_path($outdir);
    push @args, "-o $outdir" unless ($subCommand eq "plot" || $subCommand eq "tidy" || $subCommand eq "compare");
} else {
    $outdir = abs_path($outdir);
}


## Nuts and Bolts...
if($subCommand eq "align") {
  $EXIT_STATUS = system("$path/bin/RunDBS_1.pl @args");
} 
elsif($subCommand eq "combine") {
  $EXIT_STATUS = system("$path/bin/RunDBS_2.pl @args");
} 
elsif($subCommand eq "merge") {
  $EXIT_STATUS = system("$path/bin/MergeOutputs.pl @args");
} 
elsif($subCommand eq "compare") {
  $EXIT_STATUS = system("$path/bin/ComparePSI.pl @args");
} 
elsif($subCommand eq "diff") {
  $EXIT_STATUS = system("$path/R/vastdiff.R @args");
} 
elsif($subCommand eq "plot") {
  $EXIT_STATUS = system("$path/R/psiplotter.R @args");
}
elsif($subCommand eq "tidy") {
  $EXIT_STATUS = system("$path/bin/Filter_and_clean_Combine.pl @args");
}

exit $EXIT_STATUS >> 8;
